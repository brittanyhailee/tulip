{"version":3,"file":"memory.ea3e68b325d965e36ff7.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC1DA","sources":["webpack://tulip/./src/db/Request.ts","webpack://tulip/webpack/runtime/getFullHash"],"sourcesContent":["var storeName = 'memories';\nvar dbName = 'test';\nvar key = 1;\nvar db;\nvar request = indexedDB.open(dbName, 1);\nrequest.onerror = function (event) {\n    console.error('Error opening database:', event.target.error);\n};\nrequest.onsuccess = function (event) {\n    db = event.target.result;\n    getValueFromMemory();\n};\nrequest.onupgradeneeded = function (event) {\n    var db = event.target.result;\n    db.createObjectStore(storeName, { keyPath: 'id' });\n};\n// export function getValueFromMemory() {\n//     const transaction = db.transaction(storeName, \"readonly\");\n//     const store = transaction.objectStore(storeName);\n//     const getRequest = store.get(key);\n//     getRequest.onsuccess = (event) => {\n//         const value = (event.target as IDBRequest).result;\n//         if (value) {\n//             console.log(\"Value retrieved: \", value);\n//             console.log(\"Memory: \", value.name);\n//             return value.name;\n//         } else {\n//             console.log(\"No value found for key: \", key);\n//             return (\"No value found for key: \" + key);\n//         }\n//     };\n//     getRequest.onerror = (event) => {\n//         console.error(\"Error getting value: \", event);\n//     };\n//     return \"\";\n// }\nexport function getValueFromMemory(key) {\n    return new Promise((resolve, reject));\n    {\n        getRequest.onsuccess = function (event) {\n            var value = event.target.result;\n            if (value) {\n                console.log(\"Value retrieved: \", value);\n                console.log(\"Memory: \", value.name);\n                resolve(value.name); // Resolve the promise with the value\n            }\n            else {\n                console.log(\"No value found for key: \", key);\n                resolve(\"No value found for key: \" + key); // Resolve with an error message\n            }\n        };\n    }\n    ;\n    getRequest.onerror = function (event) {\n        console.error(\"Error getting value: \", event);\n        reject(\"Error retrieving value.\"); // Reject the promise in case of an error\n    };\n}\n;\n","__webpack_require__.h = () => (\"ae6d6a4645174535d840\")"],"names":[],"sourceRoot":""}