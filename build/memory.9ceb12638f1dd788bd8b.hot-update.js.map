{"version":3,"file":"memory.9ceb12638f1dd788bd8b.hot-update.js","mappings":";;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACtCA","sources":["webpack://tulip/./src/db/Request.ts","webpack://tulip/webpack/runtime/getFullHash"],"sourcesContent":["var storeName = 'memories';\nvar dbName = 'test';\nvar key = 1;\nvar db;\nvar request = indexedDB.open(dbName, 1);\nrequest.onerror = function (event) {\n    console.error('Error opening database:', event.target.error);\n};\nrequest.onsuccess = function (event) {\n    db = event.target.result;\n    getValueFromMemory();\n};\nrequest.onupgradeneeded = function (event) {\n    var db = event.target.result;\n    db.createObjectStore(storeName, { keyPath: 'id' });\n};\nexport function getValueFromMemory() {\n    return new Promise(function (resolve, reject) {\n        var transaction = db.transaction(storeName, \"readonly\");\n        var store = transaction.objectStore(storeName);\n        var getRequest = store.get(key);\n        getRequest.onsuccess = function (event) {\n            var value = event.target.result;\n            if (value) {\n                console.log(\"Value retrieved: \", value);\n                console.log(\"Memory: \", value.name);\n                resolve();\n                JSON.stringify(value.name);\n            }\n            else {\n                console.log(\"No value found for key: \", key);\n                return (\"No value found for key: \" + key);\n            }\n        };\n        getRequest.onerror = function (event) {\n            console.error(\"Error getting value: \", event);\n        };\n    });\n}\n","__webpack_require__.h = () => (\"4c2958fe5f85e3cf2997\")"],"names":[],"sourceRoot":""}